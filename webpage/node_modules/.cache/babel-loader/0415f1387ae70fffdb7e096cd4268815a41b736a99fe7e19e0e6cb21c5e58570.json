{"ast":null,"code":"var _jsxFileName = \"/Users/tianhonggao/Desktop/sample-react/webpage/src/Admin/UserHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, BarElement } from 'chart.js';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserHistory() {\n  _s();\n  const params = useParams();\n  const userId = params.id;\n\n  // State to store the fetched history data\n  const [historyData, setHistoryData] = useState(null);\n  useEffect(() => {\n    // Fetch the history data when the component is mounted\n    const fetchHistoryData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/users`);\n        let data = await response.json();\n        const targetData = data.filter(user => user._id === userId);\n        setHistoryData(targetData.bought); // update the state with the fetched data\n      } catch (error) {\n        console.error(\"Failed to fetch history data:\", error);\n      }\n    };\n    fetchHistoryData();\n  }, [userId]); // dependency array, only re-run the effect if userId changes\n\n  if (!historyData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, BarElement);\n  const totalQuantities = historyData.flat().reduce((acc, item) => {\n    Object.keys(item).forEach(key => {\n      if (!acc[key]) {\n        acc[key] = item[key];\n      } else {\n        acc[key] += item[key];\n      }\n    });\n    return acc;\n  }, {});\n  const backgroundColor = ['rgba(255, 99, 132, 0.5)', 'rgba(53, 162, 235, 0.5)', 'rgba(181, 2, 160, 0.5)', 'rgba(227, 223, 0, 0.5)', 'rgba(34, 139, 34, 0.5)'];\n  const borderColor = ['rgba(255, 99, 132)', 'rgba(53, 162, 235)', 'rgba(181, 2, 160)', 'rgba(227, 223, 0)', 'rgba(34, 139, 34)'];\n  const doughnutData = {\n    labels: Object.keys(totalQuantities),\n    datasets: [{\n      label: '# of purchases',\n      data: Object.values(totalQuantities),\n      backgroundColor: backgroundColor,\n      borderColor: borderColor,\n      borderWidth: 1\n    }]\n  };\n  const barData = {\n    labels: historyData.map((_, index) => `Session ${index + 1}`),\n    datasets: Object.keys(totalQuantities).map((key, i) => ({\n      label: key,\n      data: historyData.map(session => session[key] || 0),\n      backgroundColor: backgroundColor[i],\n      borderColor: borderColor[i],\n      borderWidth: 1\n    }))\n  };\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n\n  // Display the history data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Total Quantities:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(totalQuantities, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: doughnutData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Session Purchases:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: barData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(UserHistory, \"cbFuYOENhTU3r9DGWGt8b2VQM0w=\", false, function () {\n  return [useParams];\n});\n_c = UserHistory;\nexport default UserHistory;\nvar _c;\n$RefreshReg$(_c, \"UserHistory\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","BarElement","Doughnut","Bar","useParams","jsxDEV","_jsxDEV","UserHistory","_s","params","userId","id","historyData","setHistoryData","fetchHistoryData","response","fetch","data","json","targetData","filter","user","_id","bought","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","register","totalQuantities","flat","reduce","acc","item","Object","keys","forEach","key","backgroundColor","borderColor","doughnutData","labels","datasets","label","values","borderWidth","barData","map","_","index","i","session","options","scales","y","beginAtZero","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/tianhonggao/Desktop/sample-react/webpage/src/Admin/UserHistory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, BarElement } from 'chart.js';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport { useParams } from 'react-router-dom';\n\nfunction UserHistory() {\n  const params = useParams();\n  const userId = params.id;\n\n  // State to store the fetched history data\n  const [historyData, setHistoryData] = useState(null);\n\n  useEffect(() => {\n    // Fetch the history data when the component is mounted\n    const fetchHistoryData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/users`);\n        let data = await response.json();\n        const targetData = data.filter(user => user._id === userId);\n        setHistoryData(targetData.bought); // update the state with the fetched data\n      } catch (error) {\n        console.error(\"Failed to fetch history data:\", error);\n      }\n    };\n\n    fetchHistoryData();\n  }, [userId]); // dependency array, only re-run the effect if userId changes\n\n  if (!historyData) {\n    return <div>Loading...</div>;\n  }\n\n  ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, BarElement);\n\n  const totalQuantities = historyData\n    .flat()\n    .reduce((acc, item) => {\n      Object.keys(item).forEach((key) => {\n        if (!acc[key]) {\n          acc[key] = item[key];\n        } else {\n          acc[key] += item[key];\n        }\n      });\n      return acc;\n    }, {});\n\n  const backgroundColor = [\n    'rgba(255, 99, 132, 0.5)',\n    'rgba(53, 162, 235, 0.5)',\n    'rgba(181, 2, 160, 0.5)',\n    'rgba(227, 223, 0, 0.5)',\n    'rgba(34, 139, 34, 0.5)',\n  ]\n  const borderColor = [\n    'rgba(255, 99, 132)',\n    'rgba(53, 162, 235)',\n    'rgba(181, 2, 160)',\n    'rgba(227, 223, 0)',\n    'rgba(34, 139, 34)',\n  ]\n\n  const doughnutData = {\n    labels: Object.keys(totalQuantities),\n    datasets: [\n      {\n        label: '# of purchases',\n        data: Object.values(totalQuantities),\n        backgroundColor: backgroundColor,\n        borderColor: borderColor,\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const barData = {\n    labels: historyData.map((_, index) => `Session ${index + 1}`),\n    datasets: Object.keys(totalQuantities).map((key, i) => ({\n      label: key,\n      data: historyData.map((session) => session[key] || 0),\n      backgroundColor: backgroundColor[i],\n      borderColor: borderColor[i],\n      borderWidth: 1,\n    })),\n  };\n\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n  };\n\n  // Display the history data\n  return (\n    <div>\n      <h1>User ID: {userId}</h1>\n      <h2>Total Quantities:</h2>\n      <pre>{JSON.stringify(totalQuantities, null, 2)}</pre>\n      <Doughnut data={doughnutData} />\n      <h2>Session Purchases:</h2>\n      <Bar data={barData} options={options} />\n    </div>\n  );\n}\n\nexport default UserHistory;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}