{"ast":null,"code":"var _jsxFileName = \"/Users/tianhonggao/Desktop/sample-react/webpage/src/Admin/Statistic.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nconst Stat = () => {\n  _s();\n  const [allProducts, setAllProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetchDB();\n  }, []);\n  const fetchDB = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/api/products', {\n        method: 'GET'\n      });\n      let data = await response.json();\n      const siftedData = data.filter(item => item.quantity !== 0);\n      if (siftedData.length === 0) {\n        setAllProducts(data);\n      } else {\n        setAllProducts(siftedData);\n      }\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Failed to fetch products:', err);\n      setIsLoading(false);\n    }\n  };\n  const [barChartData, setBarChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [pieChartData, setPieChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [lineChartData, setLineChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  useEffect(() => {\n    if (!isLoading) {\n      const sortedProd = [...allProducts].sort((a, b) => b.sold - a.sold);\n      const labels = sortedProd.map(item => item.prod_name);\n      const data = sortedProd.map(item => item.sold);\n\n      // Set bar chart data\n      setBarChartData({\n        labels: labels,\n        datasets: [{\n          label: 'Sold',\n          data: data,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      });\n\n      // Set pie chart data\n      setPieChartData({\n        labels: labels,\n        datasets: [{\n          label: 'Sold',\n          data: data,\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],\n          borderWidth: 1\n        }]\n      });\n\n      // Set line chart data\n      const lineData = sortedProd.map(item => item.record);\n      console.log(lineData);\n    }\n  }, [allProducts, isLoading]);\n  const optionsForBar = {\n    responsive: true,\n    maintainAspectRatio: false,\n    indexAxis: 'x',\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let value = context.raw;\n            return context.label + ' sold: ' + value;\n          }\n        }\n      }\n    }\n  };\n  const optionsForPie = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let total = context.dataset.data.reduce((a, b) => a + b, 0);\n            let value = context.raw;\n            let percentage = (value / total * 100).toFixed(2);\n            return context.label + ': ' + percentage + '%';\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"600px\",\n        height: \"600px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: barChartData,\n        options: optionsForBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"600px\",\n        height: \"600px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: pieChartData,\n        options: optionsForPie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(Stat, \"0de5SCFTsIJ7vvkHOEPzcl/MUlE=\");\n_c = Stat;\nexport default Stat;\nvar _c;\n$RefreshReg$(_c, \"Stat\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","ArcElement","Tooltip","Legend","BarElement","CategoryScale","LinearScale","Bar","Pie","jsxDEV","_jsxDEV","register","Stat","_s","allProducts","setAllProducts","isLoading","setIsLoading","fetchDB","response","fetch","method","data","json","siftedData","filter","item","quantity","length","err","console","error","barChartData","setBarChartData","labels","datasets","pieChartData","setPieChartData","lineChartData","setLineChartData","sortedProd","sort","a","b","sold","map","prod_name","label","backgroundColor","borderColor","borderWidth","lineData","record","log","optionsForBar","responsive","maintainAspectRatio","indexAxis","plugins","tooltip","callbacks","context","value","raw","optionsForPie","total","dataset","reduce","percentage","toFixed","className","style","display","justifyContent","children","width","height","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tianhonggao/Desktop/sample-react/webpage/src/Admin/Statistic.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport { Bar, Pie } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nconst Stat = () => {\n\n  const [allProducts, setAllProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchDB();\n  }, []);\n\n  const fetchDB = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/api/products', {\n        method: 'GET',\n      });\n      let data = await response.json();\n      const siftedData = data.filter(item => item.quantity !== 0);\n      if (siftedData.length === 0) {\n        setAllProducts(data);\n      } else {\n        setAllProducts(siftedData);\n      }\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Failed to fetch products:', err);\n      setIsLoading(false);\n    }\n  };\n\n  const [barChartData, setBarChartData] = useState({ labels: [], datasets: [] });\n  const [pieChartData, setPieChartData] = useState({ labels: [], datasets: [] });\n  const [lineChartData, setLineChartData] = useState({ labels: [], datasets: [] });\n\n  useEffect(() => {\n    if (!isLoading) {\n      const sortedProd = [...allProducts].sort((a, b) => b.sold - a.sold);\n      const labels = sortedProd.map(item => item.prod_name);\n      const data = sortedProd.map(item => item.sold);\n\n      // Set bar chart data\n      setBarChartData({\n        labels: labels,\n        datasets: [{\n          label: 'Sold',\n          data: data,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1,\n        }],\n      });\n\n      // Set pie chart data\n      setPieChartData({\n        labels: labels,\n        datasets: [{\n          label: 'Sold',\n          data: data,\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n          ],\n          borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n          ],\n          borderWidth: 1,\n        }],\n      });\n\n      // Set line chart data\n      const lineData = sortedProd.map(item => item.record);\n      console.log(lineData);\n    }\n  }, [allProducts, isLoading]);\n\n  const optionsForBar = {\n    responsive: true,\n    maintainAspectRatio: false,\n    indexAxis: 'x',\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            let value = context.raw;\n            return context.label + ' sold: ' + value;\n          }\n        }\n      }\n    }\n  };\n\n  const optionsForPie = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            let total = context.dataset.data.reduce((a, b) => a + b, 0);\n            let value = context.raw;\n            let percentage = ((value/total) * 100).toFixed(2);\n            return context.label + ': ' + percentage + '%';\n          }\n        }\n      }\n    }\n  }\n\n  return (\n    <div className='charts' style={{ display: 'flex', justifyContent: 'space-between' }}>\n      <div style={{width: \"600px\", height: \"600px\"}}>\n        <Bar data={barChartData} options={optionsForBar}/>\n      </div>\n      <div style={{width: \"600px\", height: \"600px\"}}>\n        <Pie data={pieChartData} options={optionsForPie}/>\n      </div>\n    </div>\n  );\n};\n\nexport default Stat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}