{"ast":null,"code":"// import React, { useContext, useState, useEffect } from 'react';\n// import { Button, Spinner, Modal } from 'react-bootstrap';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import { UserContext } from './UserContext';\n// import './UserHomePage.css';\n\n// const UserHomePage = ({ products }) => {\n//   const params = useParams();\n//   const userId = params.id;\n//   const { logOut } = useContext(UserContext);\n//   const navigate = useNavigate();\n\n//   const [userInfo, setUserInfo] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [showModal, setShowModal] = useState(false);\n\n//   const handleClose = () => setShowModal(false);\n//   const handleShow = () => setShowModal(true);\n\n//   const handleLogOut = () => {\n//     logOut();\n//     localStorage.removeItem('user');\n//     navigate('/');\n//   }\n\n//   useEffect(() => {\n//     const fetchUserData = async () => {\n//       setLoading(true);\n//       try {\n//         const response = await fetch(`http://localhost:8000/api/users`);\n//         let users = await response.json();\n//         const targetUser = users.find(user => user._id === userId);\n//         if (targetUser) {\n//           setUserInfo(targetUser);\n//           localStorage.setItem('user', JSON.stringify(targetUser));\n//         }\n//       } catch (error) {\n//         console.error(\"Failed to fetch user data:\", error);\n//       }\n//       setLoading(false);\n//     };\n\n//     const userData = localStorage.getItem('user');\n//     if (userData) {\n//       setUserInfo(JSON.parse(userData));\n//       setLoading(false);\n//     } else {\n//       fetchUserData();\n//     }\n//   }, [userId]);\n\n//   const calculateTotal = (session) => {\n//     return session.reduce((total, item) => {\n//       const [prod_name, quantity] = Object.entries(item)[0];\n//       const product = products.find(prod => prod.prod_name === prod_name);\n\n//       if (product) {\n//         return total + (product.price * quantity);\n//       } else {\n//         console.error(`Product ${prod_name} not found`);\n//         return total;\n//       }\n//     }, 0);\n//   }\n\n//   return (\n//     <div className='home-page-container'>\n//       {loading ? (\n//         <Spinner animation=\"border\" role=\"status\">\n//           <span className=\"sr-only\">Loading...</span>\n//         </Spinner>\n//       ) : userInfo ? (\n//         <>\n//           <div className=\"user-homepage\">\n//             <h2>{userInfo.username}'s Homepage</h2>\n//             <h3>id: #{userId}</h3>\n//             <div className='purchase-history'>\n//               <h3>Purchase History</h3>\n//               {userInfo.bought.map((session, index) => (\n//                 <div key={index} className=\"purchase-session\">\n//                   {session.map((item, i) => (\n//                     Object.entries(item).map(([prod_name, quantity]) => (\n//                       <div key={i} className=\"purchased-item\">\n//                         <img src={`${process.env.PUBLIC_URL}/images/${prod_name}.jpg`} alt={prod_name} />\n//                         <p>Quantity: {quantity}</p>\n//                       </div>\n//                     ))\n//                   ))}\n//                   <p>Total spend: ${calculateTotal(session).toFixed(2)}</p>\n//                 </div>\n//               ))}\n//             </div>\n//             <div className=\"buttons-container\">\n//               <Button variant=\"danger\" onClick={handleShow}>Log out</Button>\n//               <Button variant=\"secondary\" onClick={() => navigate('/')}>Back</Button>\n//             </div>\n//           </div>\n\n//           <Modal show={showModal} onHide={handleClose}>\n//             <Modal.Header closeButton>\n//               <Modal.Title>Confirmation</Modal.Title>\n//             </Modal.Header>\n//             <Modal.Body>Are you sure you want to log out?</Modal.Body>\n//             <Modal.Footer>\n//               <Button variant=\"secondary\" onClick={handleClose}>\n//                 Cancel\n//               </Button>\n//               <Button variant=\"primary\" onClick={handleLogOut}>\n//                 Log Out\n//               </Button>\n//             </Modal.Footer>\n//           </Modal>\n//         </>\n//       ) : null}\n//     </div>\n//   );\n// }\n\n// export default UserHomePage;","map":{"version":3,"names":[],"sources":["/Users/tianhonggao/Desktop/sample-react/webpage/src/Components/UserHomePage.js"],"sourcesContent":["// import React, { useContext, useState, useEffect } from 'react';\n// import { Button, Spinner, Modal } from 'react-bootstrap';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import { UserContext } from './UserContext';\n// import './UserHomePage.css';\n\n// const UserHomePage = ({ products }) => {\n//   const params = useParams();\n//   const userId = params.id;\n//   const { logOut } = useContext(UserContext);\n//   const navigate = useNavigate();\n\n//   const [userInfo, setUserInfo] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [showModal, setShowModal] = useState(false);\n\n//   const handleClose = () => setShowModal(false);\n//   const handleShow = () => setShowModal(true);\n\n//   const handleLogOut = () => {\n//     logOut();\n//     localStorage.removeItem('user');\n//     navigate('/');\n//   }\n\n//   useEffect(() => {\n//     const fetchUserData = async () => {\n//       setLoading(true);\n//       try {\n//         const response = await fetch(`http://localhost:8000/api/users`);\n//         let users = await response.json();\n//         const targetUser = users.find(user => user._id === userId);\n//         if (targetUser) {\n//           setUserInfo(targetUser);\n//           localStorage.setItem('user', JSON.stringify(targetUser));\n//         }\n//       } catch (error) {\n//         console.error(\"Failed to fetch user data:\", error);\n//       }\n//       setLoading(false);\n//     };\n\n//     const userData = localStorage.getItem('user');\n//     if (userData) {\n//       setUserInfo(JSON.parse(userData));\n//       setLoading(false);\n//     } else {\n//       fetchUserData();\n//     }\n//   }, [userId]);\n\n//   const calculateTotal = (session) => {\n//     return session.reduce((total, item) => {\n//       const [prod_name, quantity] = Object.entries(item)[0];\n//       const product = products.find(prod => prod.prod_name === prod_name);\n\n//       if (product) {\n//         return total + (product.price * quantity);\n//       } else {\n//         console.error(`Product ${prod_name} not found`);\n//         return total;\n//       }\n//     }, 0);\n//   }\n\n//   return (\n//     <div className='home-page-container'>\n//       {loading ? (\n//         <Spinner animation=\"border\" role=\"status\">\n//           <span className=\"sr-only\">Loading...</span>\n//         </Spinner>\n//       ) : userInfo ? (\n//         <>\n//           <div className=\"user-homepage\">\n//             <h2>{userInfo.username}'s Homepage</h2>\n//             <h3>id: #{userId}</h3>\n//             <div className='purchase-history'>\n//               <h3>Purchase History</h3>\n//               {userInfo.bought.map((session, index) => (\n//                 <div key={index} className=\"purchase-session\">\n//                   {session.map((item, i) => (\n//                     Object.entries(item).map(([prod_name, quantity]) => (\n//                       <div key={i} className=\"purchased-item\">\n//                         <img src={`${process.env.PUBLIC_URL}/images/${prod_name}.jpg`} alt={prod_name} />\n//                         <p>Quantity: {quantity}</p>\n//                       </div>\n//                     ))\n//                   ))}\n//                   <p>Total spend: ${calculateTotal(session).toFixed(2)}</p>\n//                 </div>\n//               ))}\n//             </div>\n//             <div className=\"buttons-container\">\n//               <Button variant=\"danger\" onClick={handleShow}>Log out</Button>\n//               <Button variant=\"secondary\" onClick={() => navigate('/')}>Back</Button>\n//             </div>\n//           </div>\n\n//           <Modal show={showModal} onHide={handleClose}>\n//             <Modal.Header closeButton>\n//               <Modal.Title>Confirmation</Modal.Title>\n//             </Modal.Header>\n//             <Modal.Body>Are you sure you want to log out?</Modal.Body>\n//             <Modal.Footer>\n//               <Button variant=\"secondary\" onClick={handleClose}>\n//                 Cancel\n//               </Button>\n//               <Button variant=\"primary\" onClick={handleLogOut}>\n//                 Log Out\n//               </Button>\n//             </Modal.Footer>\n//           </Modal>\n//         </>\n//       ) : null}\n//     </div>\n//   );\n// }\n\n// export default UserHomePage;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}