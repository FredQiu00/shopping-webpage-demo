{"ast":null,"code":"var _jsxFileName = \"/Users/tianhonggao/Desktop/sample-react/webpage/src/Components/Product.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { CartContext } from './CartContext';\nimport { UserContext } from './UserContext';\nimport { updateQuantity, updatePurchaseHistory } from './CartDisplay';\nimport './Product.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductCard = _ref => {\n  _s();\n  let {\n    product,\n    fetchProducts\n  } = _ref;\n  const {\n    addToCart\n  } = useContext(CartContext);\n  const {\n    user\n  } = useContext(UserContext);\n  const oneTimePurchase = async () => {\n    try {\n      // Update prod data\n      const updatedQuantity = product.quantity - 1;\n      if (updatedQuantity >= 0) {\n        const response = await fetch('http://localhost:8000/api/products', {\n          method: 'GET'\n        });\n        let data = await response.json();\n        const siftedData = data.filter(item => item.quantity !== 0);\n        const updatedProducts = siftedData.map(prod => {\n          if (prod._id === product._id) {\n            // If it's the product being purchased, decrement quantity, increment sold, and add to record\n            return {\n              ...prod,\n              quantity: updatedQuantity,\n              sold: product.sold + 1,\n              record: product.sold + 1\n            };\n          } else {\n            // If it's not the product being purchased, just add the last sold value (or 0 if there are no sales yet) to the record\n            return {\n              ...prod,\n              record: prod.sold\n            };\n          }\n        });\n        await Promise.all(updatedProducts.map(prod => updateQuantity(prod, prod.quantity, prod.sold, prod.record)));\n        alert(`Checkout completed. Total price: $${product.price}`);\n        fetchProducts();\n\n        // Update User data\n        fetch(`http://localhost:8000/api/users/history/${user._id}`, {\n          method: 'PUT',\n          body: JSON.stringify({\n            bought: {\n              [product.prod_name]: 1\n            }\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n    } catch (err) {\n      alert('An error occurred during checkout. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/images/${product._id}.jpg`,\n        alt: product.prod_name,\n        className: \"product-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n        children: product.prod_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        children: [\"$\", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => addToCart(product),\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: oneTimePurchase,\n          children: \"Buy Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductCard, \"xC/ZpVeMBDI4bclLDoW/+rdEudc=\");\n_c = ProductCard;\nexport default ProductCard;\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"names":["React","useContext","Card","Button","CartContext","UserContext","updateQuantity","updatePurchaseHistory","jsxDEV","_jsxDEV","ProductCard","_ref","_s","product","fetchProducts","addToCart","user","oneTimePurchase","updatedQuantity","quantity","response","fetch","method","data","json","siftedData","filter","item","updatedProducts","map","prod","_id","sold","record","Promise","all","alert","price","body","JSON","stringify","bought","prod_name","headers","err","className","children","Body","src","process","env","PUBLIC_URL","alt","fileName","_jsxFileName","lineNumber","columnNumber","Title","Subtitle","Text","description","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/tianhonggao/Desktop/sample-react/webpage/src/Components/Product.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { CartContext } from './CartContext';\nimport { UserContext } from './UserContext';\nimport { updateQuantity, updatePurchaseHistory } from './CartDisplay';\nimport './Product.css';\n\nconst ProductCard = ({ product, fetchProducts }) => {\n  const { addToCart } = useContext(CartContext);\n  const { user } = useContext(UserContext);\n\n  const oneTimePurchase = async () => {\n    try {\n      // Update prod data\n      const updatedQuantity = product.quantity - 1;\n      if (updatedQuantity >= 0) {\n        const response = await fetch('http://localhost:8000/api/products', {\n          method: 'GET',\n        });\n        let data = await response.json();\n        const siftedData = data.filter(item => item.quantity !== 0);\n        const updatedProducts = siftedData.map((prod) => {\n          if (prod._id === product._id) {\n            // If it's the product being purchased, decrement quantity, increment sold, and add to record\n            return { ...prod, quantity: updatedQuantity, sold: product.sold + 1, record: product.sold + 1 };\n          } else {\n            // If it's not the product being purchased, just add the last sold value (or 0 if there are no sales yet) to the record\n            return { ...prod, record: prod.sold};\n          }\n        });\n        await Promise.all(updatedProducts.map((prod) => updateQuantity(prod, prod.quantity, prod.sold, prod.record)));\n        alert(`Checkout completed. Total price: $${product.price}`);\n        fetchProducts();\n\n        // Update User data\n        fetch(`http://localhost:8000/api/users/history/${user._id}`, {\n          method: 'PUT',\n          body: JSON.stringify({ bought: {[product.prod_name]: 1}}),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n      }\n    } catch (err) {\n      alert('An error occurred during checkout. Please try again.');\n    }\n  }\n\n  return (\n    <Card className=\"card\">\n      <Card.Body className=\"container\">\n        <img src={`${process.env.PUBLIC_URL}/images/${product._id}.jpg`} alt={product.prod_name} className=\"product-image\" />\n        <Card.Title>{product.prod_name}</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">${product.price}</Card.Subtitle>\n        <Card.Text>{product.description}</Card.Text>\n        <div className=\"button-container\">\n          <Button variant=\"primary\" onClick={() => addToCart(product)}>\n            Add to Cart\n          </Button>\n          <Button variant=\"success\" onClick={oneTimePurchase}>\n            Buy Now\n          </Button>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ProductCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}