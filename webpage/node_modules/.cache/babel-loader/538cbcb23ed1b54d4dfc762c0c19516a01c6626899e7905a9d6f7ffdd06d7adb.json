{"ast":null,"code":"var _jsxFileName = \"/Users/tianhonggao/Desktop/sample-react/webpage/src/Components/UserHomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Button, Form, Spinner, Modal } from 'react-bootstrap';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { UserContext } from './UserContext';\nimport { isValidEmail, isValidPhone, isValidPassword, isMatchedPassword } from './UserLogIn';\nimport './UserHomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserHomePage = _ref => {\n  _s();\n  let {\n    products\n  } = _ref;\n  const params = useParams();\n  const userId = params.id;\n  const {\n    logOut\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [userInfo, setUserInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [showHistory, setShowHistory] = useState(false); // manage the visibility of the purchase history\n\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n  const handleLogOut = () => {\n    logOut();\n    localStorage.removeItem('user');\n    navigate('/');\n  };\n  useEffect(() => {\n    const fetchUserData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`http://localhost:8000/api/users`);\n        let users = await response.json();\n        const targetUser = users.find(user => user._id === userId);\n        if (targetUser) {\n          setUserInfo(targetUser);\n          localStorage.setItem('user', JSON.stringify(targetUser));\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch user data:\", error);\n      }\n      setLoading(false);\n    };\n    const userData = localStorage.getItem('user');\n    if (userData) {\n      setUserInfo(JSON.parse(userData));\n      setLoading(false);\n    } else {\n      fetchUserData();\n    }\n  }, [userId]);\n  const calculateTotal = session => {\n    return session.reduce((total, item) => {\n      const [prod_name, quantity] = Object.entries(item)[0];\n      const product = products.find(prod => prod.prod_name === prod_name);\n      if (product) {\n        return total + product.price * quantity;\n      } else {\n        console.error(`Product ${prod_name} not found`);\n        return total;\n      }\n    }, 0);\n  };\n  const [newEmail, setNewEmail] = useState('');\n  const [newEmailError, setNewEmailError] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n  const [newPhoneError, setNewPhoneError] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [newPasswordError, setNewPasswordError] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  const handleInfoChange = (e, setState, setErrorState, validationFn) => {\n    const newValue = e.target.value;\n    setState(newValue);\n    const validationError = validationFn === isMatchedPassword ? validationFn(newPassword, newValue) : validationFn(newValue);\n    setErrorState(validationError);\n  };\n  const handleInfoSubmit = e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      alert(\"Passwords do not match each other.\");\n      return;\n    }\n    fetch(`http://localhost:8000/api/users/info/${userId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: newEmail,\n        phone: newPhone,\n        password: newPassword\n      })\n    }).then(response => response.json()).then(data => {\n      if (data) {\n        setUserInfo(data);\n        resetDefault();\n        alert('Information updated successfully');\n      }\n    }).catch(error => {\n      alert(`Failed to update user information: ${error.message}`);\n      resetDefault();\n    });\n  };\n  const resetDefault = () => {\n    setNewEmail('');\n    setNewPhone('');\n    setNewPassword('');\n    setConfirmPassword('');\n  };\n\n  // ...existing render code...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page-container\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"change-info\",\n      onSubmit: handleInfoSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Change Personal Info:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter new email\",\n          value: newEmail,\n          onChange: e => handleInfoChange(e, setNewEmail, setNewEmailError, isValidEmail),\n          isInvalid: !!newEmailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: newEmailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formPhone\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter new phone number\",\n          value: newPhone,\n          onChange: e => handleInfoChange(e, setNewPhone, setNewPhoneError, isValidPhone),\n          isInvalid: !!newPhoneError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: newPhoneError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter new password\",\n          value: newPassword,\n          onChange: e => handleInfoChange(e, setNewPassword, setNewPasswordError, isValidPassword),\n          isInvalid: !!newPasswordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: newPasswordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formConfirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Confirm new password\",\n          value: confirmPassword,\n          onChange: e => handleInfoChange(e, setConfirmPassword, setConfirmPasswordError, isMatchedPassword),\n          isInvalid: !!confirmPasswordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: confirmPasswordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(UserHomePage, \"SyzGYuXyR6PdYkaQxLJeBLnc5Rc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UserHomePage;\nexport default UserHomePage;\nvar _c;\n$RefreshReg$(_c, \"UserHomePage\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Button","Form","Spinner","Modal","useNavigate","useParams","UserContext","isValidEmail","isValidPhone","isValidPassword","isMatchedPassword","jsxDEV","_jsxDEV","UserHomePage","_ref","_s","products","params","userId","id","logOut","navigate","userInfo","setUserInfo","loading","setLoading","showModal","setShowModal","showHistory","setShowHistory","handleClose","handleShow","handleLogOut","localStorage","removeItem","fetchUserData","response","fetch","users","json","targetUser","find","user","_id","setItem","JSON","stringify","error","console","userData","getItem","parse","calculateTotal","session","reduce","total","item","prod_name","quantity","Object","entries","product","prod","price","newEmail","setNewEmail","newEmailError","setNewEmailError","newPhone","setNewPhone","newPhoneError","setNewPhoneError","newPassword","setNewPassword","newPasswordError","setNewPasswordError","confirmPassword","setConfirmPassword","confirmPasswordError","setConfirmPasswordError","handleInfoChange","e","setState","setErrorState","validationFn","newValue","target","value","validationError","handleInfoSubmit","preventDefault","alert","method","headers","body","email","phone","password","then","data","resetDefault","catch","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Control","type","placeholder","onChange","isInvalid","Feedback","variant","_c","$RefreshReg$"],"sources":["/Users/tianhonggao/Desktop/sample-react/webpage/src/Components/UserHomePage.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { Button, Form, Spinner, Modal } from 'react-bootstrap';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { UserContext } from './UserContext';\nimport { isValidEmail, isValidPhone, isValidPassword, isMatchedPassword } from './UserLogIn';\nimport './UserHomePage.css';\n\nconst UserHomePage = ({ products }) => {\n  const params = useParams();\n  const userId = params.id;\n  const { logOut } = useContext(UserContext);\n  const navigate = useNavigate();\n\n  const [userInfo, setUserInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [showHistory, setShowHistory] = useState(false); // manage the visibility of the purchase history\n\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n  const handleLogOut = () => {\n    logOut();\n    localStorage.removeItem('user');\n    navigate('/');\n  }\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`http://localhost:8000/api/users`);\n        let users = await response.json();\n        const targetUser = users.find(user => user._id === userId);\n        if (targetUser) {\n          setUserInfo(targetUser);\n          localStorage.setItem('user', JSON.stringify(targetUser));\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch user data:\", error);\n      }\n      setLoading(false);\n    };\n\n    const userData = localStorage.getItem('user');\n    if (userData) {\n      setUserInfo(JSON.parse(userData));\n      setLoading(false);\n    } else {\n      fetchUserData();\n    }\n  }, [userId]);\n\n  const calculateTotal = (session) => {\n    return session.reduce((total, item) => {\n      const [prod_name, quantity] = Object.entries(item)[0];\n      const product = products.find(prod => prod.prod_name === prod_name);\n\n      if (product) {\n        return total + (product.price * quantity);\n      } else {\n        console.error(`Product ${prod_name} not found`);\n        return total;\n      }\n    }, 0);\n  }\n\n  const [newEmail, setNewEmail] = useState('');\n  const [newEmailError, setNewEmailError] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n  const [newPhoneError, setNewPhoneError] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [newPasswordError, setNewPasswordError] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n\n  const handleInfoChange = (e, setState, setErrorState, validationFn) => {\n    const newValue = e.target.value;\n    setState(newValue);\n    const validationError =\n      validationFn === isMatchedPassword ? validationFn(newPassword, newValue) : validationFn(newValue);\n    setErrorState(validationError);\n  };\n\n  const handleInfoSubmit = (e) => {\n    e.preventDefault();\n\n    if (newPassword !== confirmPassword) {\n      alert(\"Passwords do not match each other.\");\n      return;\n    }\n\n    fetch(`http://localhost:8000/api/users/info/${userId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email: newEmail, phone: newPhone, password: newPassword }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data) {\n          setUserInfo(data);\n          resetDefault();\n          alert('Information updated successfully');\n        }\n      })\n      .catch(error => {\n        alert(`Failed to update user information: ${error.message}`);\n        resetDefault();\n      });\n  };\n\n  const resetDefault = () => {\n    setNewEmail('');\n    setNewPhone('');\n    setNewPassword('');\n    setConfirmPassword('');\n  }\n\n  // ...existing render code...\n\n  return (\n    <div className='home-page-container'>\n      {/* ...existing code... */}\n      <Form className='change-info' onSubmit={handleInfoSubmit}>\n        <h4>Change Personal Info:</h4>\n        <Form.Group controlId=\"formEmail\">\n          <Form.Control type=\"email\" placeholder=\"Enter new email\" value={newEmail} onChange={e => handleInfoChange(e, setNewEmail, setNewEmailError, isValidEmail)} isInvalid={!!newEmailError} />\n          <Form.Control.Feedback type=\"invalid\">{newEmailError}</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"formPhone\">\n          <Form.Control type=\"text\" placeholder=\"Enter new phone number\" value={newPhone} onChange={e => handleInfoChange(e, setNewPhone, setNewPhoneError, isValidPhone)} isInvalid={!!newPhoneError} />\n          <Form.Control.Feedback type=\"invalid\">{newPhoneError}</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"formPassword\">\n          <Form.Control type=\"password\" placeholder=\"Enter new password\" value={newPassword} onChange={e => handleInfoChange(e, setNewPassword, setNewPasswordError, isValidPassword)} isInvalid={!!newPasswordError} />\n          <Form.Control.Feedback type=\"invalid\">{newPasswordError}</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"formConfirmPassword\">\n          <Form.Control type=\"password\" placeholder=\"Confirm new password\" value={confirmPassword} onChange={e => handleInfoChange(e, setConfirmPassword, setConfirmPasswordError, isMatchedPassword)} isInvalid={!!confirmPasswordError} />\n          <Form.Control.Feedback type=\"invalid\">{confirmPasswordError}</Form.Control.Feedback>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Update\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default UserHomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}