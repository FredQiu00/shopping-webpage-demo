{"ast":null,"code":"var _jsxFileName = \"/Users/tianhonggao/Desktop/sample-react/webpage/src/Admin/Statistic.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stat = () => {\n  _s();\n  ChartJS.register(ArcElement, Tooltip, Legend);\n  const [allProducts, setAllProducts] = useState([]);\n  useEffect(() => {\n    fetchDB();\n  }, []);\n  const fetchDB = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/products', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      setAllProducts(data);\n    } catch (err) {\n      console.error('Failed to fetch products:', err);\n    }\n  };\n\n  // State to hold chart data\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  useEffect(() => {\n    const labels = allProducts.map(item => item.prod_name);\n    const data = allProducts.map(item => item.sold);\n\n    // Set chart data\n    setChartData({\n      labels: labels,\n      datasets: [{\n        data: data,\n        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)'\n        // Add more colors if you have many items\n        ],\n\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'\n        // Add more colors if you have many items\n        ],\n\n        borderWidth: 1\n      }]\n    });\n  }, [products]);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let total = context.dataset.data.reduce((a, b) => a + b, 0);\n            let value = context.raw;\n            let percentage = (value / total * 100).toFixed(2);\n            return context.label + ': ' + percentage + '%';\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"600px\",\n      height: \"600px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData,\n      options: options\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Stat, \"58NHBtlAxoqQYaMGt5Ntvf+bkwo=\");\n_c = Stat;\nexport default Stat;\nvar _c;\n$RefreshReg$(_c, \"Stat\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","jsxDEV","_jsxDEV","Stat","_s","register","allProducts","setAllProducts","fetchDB","response","fetch","method","data","json","err","console","error","chartData","setChartData","labels","datasets","map","item","prod_name","sold","backgroundColor","borderColor","borderWidth","products","options","responsive","maintainAspectRatio","plugins","tooltip","callbacks","label","context","total","dataset","reduce","a","b","value","raw","percentage","toFixed","style","width","height","children","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tianhonggao/Desktop/sample-react/webpage/src/Admin/Statistic.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\n\nconst Stat = () => {\n\n  ChartJS.register(ArcElement, Tooltip, Legend);\n  const [allProducts, setAllProducts] = useState([]);\n\n  useEffect(() => {\n    fetchDB();\n  }, []);\n\n  const fetchDB = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/products', {\n        method: 'GET',\n      });\n      const data = await response.json();\n      setAllProducts(data);\n    } catch (err) {\n      console.error('Failed to fetch products:', err);\n    }\n  };\n\n\n  // State to hold chart data\n  const [chartData, setChartData] = useState({ labels: [], datasets: [] });\n\n  useEffect(() => {\n    const labels = allProducts.map(item => item.prod_name);\n    const data = allProducts.map(item => item.sold);\n\n    // Set chart data\n    setChartData({\n      labels: labels,\n      datasets: [{\n        data: data,\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          // Add more colors if you have many items\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          // Add more colors if you have many items\n        ],\n        borderWidth: 1,\n      }],\n    });\n\n  }, [products]);\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            let total = context.dataset.data.reduce((a, b) => a + b, 0);\n            let value = context.raw;\n            let percentage = ((value/total) * 100).toFixed(2);\n            return context.label + ': ' + percentage + '%';\n          }\n        }\n      }\n    }\n  }\n\n  return (\n    <div style={{width: \"600px\", height: \"600px\"}}>\n      <Pie data={chartData} options={options} key={Math.random()}/>\n    </div>\n  );\n};\n\nexport default Stat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}