{"ast":null,"code":"var _jsxFileName = \"/Users/tianhonggao/Desktop/sample-react/webpage/src/Admin/UserHistory.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserHistory() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const params = useParams();\n\n  // Get the user id from route params\n  const userId = params.id;\n\n  // Get the history data from state\n  const historyData = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.history;\n\n  // Handle case where history data or id was not passed correctly\n  if (!userId || !historyData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Invalid user ID or history data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n  ChartJS.register(ArcElement, Tooltip, Legend);\n  const totalQuantities = historyData.flat().reduce((acc, item) => {\n    Object.keys(item).forEach(key => {\n      if (!acc[key]) {\n        acc[key] = item[key];\n      } else {\n        acc[key] += item[key];\n      }\n    });\n    return acc;\n  }, {});\n  const chartData = {\n    labels: Object.keys(totalQuantities),\n    datasets: [{\n      label: '# of purchases',\n      data: Object.values(totalQuantities),\n      backgroundColor: [\n        // You can define your colors here for each item\n      ],\n      borderColor: [\n        // You can define your border colors here for each item\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  // Display the history data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Total Quantities:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(totalQuantities, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(UserHistory, \"a+/xYIuZK2RShEMUFp8VEKIA7g0=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = UserHistory;\nexport default UserHistory;\nvar _c;\n$RefreshReg$(_c, \"UserHistory\");","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","useLocation","useParams","jsxDEV","_jsxDEV","UserHistory","_s","_location$state","location","params","userId","id","historyData","state","history","children","fileName","_jsxFileName","lineNumber","columnNumber","register","totalQuantities","flat","reduce","acc","item","Object","keys","forEach","key","chartData","labels","datasets","label","data","values","backgroundColor","borderColor","borderWidth","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/tianhonggao/Desktop/sample-react/webpage/src/Admin/UserHistory.js"],"sourcesContent":["import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useLocation, useParams } from 'react-router-dom';\n\nfunction UserHistory() {\n  const location = useLocation();\n  const params = useParams();\n\n  // Get the user id from route params\n  const userId = params.id;\n\n  // Get the history data from state\n  const historyData = location.state?.history;\n\n  // Handle case where history data or id was not passed correctly\n  if (!userId || !historyData) {\n    return (\n      <div>\n        <h1>Error</h1>\n        <p>Invalid user ID or history data.</p>\n      </div>\n    );\n  }\n\n  ChartJS.register(ArcElement, Tooltip, Legend);\n\n  const totalQuantities = historyData\n    .flat()\n    .reduce((acc, item) => {\n      Object.keys(item).forEach((key) => {\n        if (!acc[key]) {\n          acc[key] = item[key];\n        } else {\n          acc[key] += item[key];\n        }\n      });\n      return acc;\n    }, {});\n\n  const chartData = {\n    labels: Object.keys(totalQuantities),\n    datasets: [\n      {\n        label: '# of purchases',\n        data: Object.values(totalQuantities),\n        backgroundColor: [\n          // You can define your colors here for each item\n        ],\n        borderColor: [\n          // You can define your border colors here for each item\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  // Display the history data\n  return (\n    <div>\n      <h1>User ID: {userId}</h1>\n      <h2>Total Quantities:</h2>\n      <pre>{JSON.stringify(totalQuantities, null, 2)}</pre>\n      <Doughnut data={chartData} />\n    </div>\n  );\n}\n\nexport default UserHistory;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACxE,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACrB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,MAAM,GAAGP,SAAS,CAAC,CAAC;;EAE1B;EACA,MAAMQ,MAAM,GAAGD,MAAM,CAACE,EAAE;;EAExB;EACA,MAAMC,WAAW,IAAAL,eAAA,GAAGC,QAAQ,CAACK,KAAK,cAAAN,eAAA,uBAAdA,eAAA,CAAgBO,OAAO;;EAE3C;EACA,IAAI,CAACJ,MAAM,IAAI,CAACE,WAAW,EAAE;IAC3B,oBACER,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdf,OAAA;QAAAW,QAAA,EAAG;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAEV;EAEAvB,OAAO,CAACwB,QAAQ,CAACvB,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;EAE7C,MAAMsB,eAAe,GAAGT,WAAW,CAChCU,IAAI,CAAC,CAAC,CACNC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IACrBC,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CAACG,OAAO,CAAEC,GAAG,IAAK;MACjC,IAAI,CAACL,GAAG,CAACK,GAAG,CAAC,EAAE;QACbL,GAAG,CAACK,GAAG,CAAC,GAAGJ,IAAI,CAACI,GAAG,CAAC;MACtB,CAAC,MAAM;QACLL,GAAG,CAACK,GAAG,CAAC,IAAIJ,IAAI,CAACI,GAAG,CAAC;MACvB;IACF,CAAC,CAAC;IACF,OAAOL,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAER,MAAMM,SAAS,GAAG;IAChBC,MAAM,EAAEL,MAAM,CAACC,IAAI,CAACN,eAAe,CAAC;IACpCW,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,gBAAgB;MACvBC,IAAI,EAAER,MAAM,CAACS,MAAM,CAACd,eAAe,CAAC;MACpCe,eAAe,EAAE;QACf;MAAA,CACD;MACDC,WAAW,EAAE;QACX;MAAA,CACD;MACDC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;;EAED;EACA,oBACElC,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,GAAI,WAAS,EAACL,MAAM;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1Bf,OAAA;MAAAW,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bf,OAAA;MAAAW,QAAA,EAAMwB,IAAI,CAACC,SAAS,CAACnB,eAAe,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrDf,OAAA,CAACJ,QAAQ;MAACkC,IAAI,EAAEJ;IAAU;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV;AAACb,EAAA,CA7DQD,WAAW;EAAA,QACDJ,WAAW,EACbC,SAAS;AAAA;AAAAuC,EAAA,GAFjBpC,WAAW;AA+DpB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}