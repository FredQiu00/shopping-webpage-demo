{"ast":null,"code":"var _jsxFileName = \"/Users/tianhonggao/Desktop/sample-react/webpage/src/Admin/Statistic.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\n// import { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stat = () => {\n  _s();\n  ChartJS.register(ArcElement, Tooltip, Legend);\n  const [allProducts, setAllProducts] = useState([]);\n  useEffect(() => {\n    fetchDB();\n  }, []);\n  const fetchDB = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/products', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      setAllProducts(data);\n    } catch (err) {\n      console.error('Failed to fetch products:', err);\n    }\n  };\n\n  // State to hold chart data\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  useEffect(() => {\n    // const labels = allProducts.map(item => item.prod_name);\n    const data = allProducts.map(item => item.sold);\n    console.log(data);\n\n    // // Set chart data\n    setChartData({\n      labels: labels,\n      datasets: [{\n        data: data,\n        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)'\n        // Add more colors if you have many items\n        ],\n\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'\n        // Add more colors if you have many items\n        ],\n\n        borderWidth: 1\n      }]\n    });\n  }, [allProducts]);\n\n  // const options = {\n  //   responsive: true,\n  //   maintainAspectRatio: false,\n  //   plugins: {\n  //     tooltip: {\n  //       callbacks: {\n  //         label: function(context) {\n  //           let total = context.dataset.data.reduce((a, b) => a + b, 0);\n  //           let value = context.raw;\n  //           let percentage = ((value/total) * 100).toFixed(2);\n  //           return context.label + ': ' + percentage + '%';\n  //         }\n  //       }\n  //     }\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"600px\",\n      height: \"600px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: allProducts.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: product.prod_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: product.sold\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Stat, \"58NHBtlAxoqQYaMGt5Ntvf+bkwo=\");\n_c = Stat;\nexport default Stat;\nvar _c;\n$RefreshReg$(_c, \"Stat\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","Stat","_s","register","allProducts","setAllProducts","fetchDB","response","fetch","method","data","json","err","console","error","chartData","setChartData","labels","datasets","map","item","sold","log","backgroundColor","borderColor","borderWidth","style","width","height","children","product","prod_name","fileName","_jsxFileName","lineNumber","columnNumber","_id","_c","$RefreshReg$"],"sources":["/Users/tianhonggao/Desktop/sample-react/webpage/src/Admin/Statistic.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\n// import { Pie } from 'react-chartjs-2';\n\nconst Stat = () => {\n\n  ChartJS.register(ArcElement, Tooltip, Legend);\n  const [allProducts, setAllProducts] = useState([]);\n\n  useEffect(() => {\n    fetchDB();\n  }, []);\n\n  const fetchDB = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/products', {\n        method: 'GET',\n      });\n      const data = await response.json();\n      setAllProducts(data);\n    } catch (err) {\n      console.error('Failed to fetch products:', err);\n    }\n  };\n\n\n  // State to hold chart data\n  const [chartData, setChartData] = useState({ labels: [], datasets: [] });\n\n  useEffect(() => {\n    // const labels = allProducts.map(item => item.prod_name);\n    const data = allProducts.map(item => item.sold);\n    console.log(data)\n\n    // // Set chart data\n    setChartData({\n      labels: labels,\n      datasets: [{\n        data: data,\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          // Add more colors if you have many items\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          // Add more colors if you have many items\n        ],\n        borderWidth: 1,\n      }],\n    });\n\n  }, [allProducts]);\n\n  // const options = {\n  //   responsive: true,\n  //   maintainAspectRatio: false,\n  //   plugins: {\n  //     tooltip: {\n  //       callbacks: {\n  //         label: function(context) {\n  //           let total = context.dataset.data.reduce((a, b) => a + b, 0);\n  //           let value = context.raw;\n  //           let percentage = ((value/total) * 100).toFixed(2);\n  //           return context.label + ': ' + percentage + '%';\n  //         }\n  //       }\n  //     }\n  //   }\n  // }\n\n  return (\n    <div style={{width: \"600px\", height: \"600px\"}}>\n      {/* <Pie data={chartData} options={options} key={Math.random()}/> */}\n      <tbody>\n          {allProducts.map((product) => (\n            <tr key={product._id}>\n              <td>{product.prod_name}</td>\n              <td>{product.sold}</td>\n            </tr>\n          ))}\n        </tbody>\n    </div>\n  );\n};\n\nexport default Stat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}