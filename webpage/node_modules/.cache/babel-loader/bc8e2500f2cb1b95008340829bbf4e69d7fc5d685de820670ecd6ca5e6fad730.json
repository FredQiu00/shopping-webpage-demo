{"ast":null,"code":"var _jsxFileName = \"/Users/tianhonggao/Desktop/sample-react/webpage/src/Admin/Statistic.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, PointElement, LineController } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, PointElement, LineController);\nconst Stat = () => {\n  _s();\n  const [allProducts, setAllProducts] = useState([]);\n  useEffect(() => {\n    fetchDB();\n  }, []);\n  const fetchDB = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/products', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      setAllProducts(data);\n    } catch (err) {\n      console.error('Failed to fetch products:', err);\n    }\n  };\n  const [lineChartData, setLineChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  useEffect(() => {\n    const maxPurchaseCount = 50; // Maximum number of purchases to display\n\n    const sortedProd = [...allProducts].sort((a, b) => b.sold - a.sold);\n\n    // Filter products with recent purchases\n    const filteredProd = sortedProd.filter(item => item.purchases.length > 0);\n\n    // Determine the maximum number of purchases\n    let maxPurchases = 0;\n    filteredProd.forEach(item => {\n      if (item.purchases.length > maxPurchases) {\n        maxPurchases = item.purchases.length;\n      }\n    });\n    const labels = [];\n    const datasets = [];\n\n    // Prepare labels and datasets for line chart\n    filteredProd.forEach(item => {\n      const {\n        prod_name,\n        purchases\n      } = item;\n      const recentPurchases = purchases.slice(-maxPurchaseCount); // Retrieve the recent purchases\n\n      const purchaseCounts = recentPurchases.map(purchase => purchase.quantity);\n      const purchaseLabel = purchaseCounts.length < maxPurchases ? `Max ${purchaseCounts.length}` : '';\n      labels.push(prod_name);\n      datasets.push({\n        label: purchaseLabel,\n        data: purchaseCounts,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        fill: false\n      });\n    });\n    setLineChartData({\n      labels: labels,\n      datasets: datasets\n    });\n  }, [allProducts]);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"600px\",\n      height: \"600px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: lineChartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Stat, \"ung6zx9bc91IFjf+X8R25nls4Cg=\");\n_c = Stat;\nexport default Stat;\nvar _c;\n$RefreshReg$(_c, \"Stat\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","PointElement","LineController","Line","jsxDEV","_jsxDEV","register","Stat","_s","allProducts","setAllProducts","fetchDB","response","fetch","method","data","json","err","console","error","lineChartData","setLineChartData","labels","datasets","maxPurchaseCount","sortedProd","sort","a","b","sold","filteredProd","filter","item","purchases","length","maxPurchases","forEach","prod_name","recentPurchases","slice","purchaseCounts","map","purchase","quantity","purchaseLabel","push","label","borderColor","backgroundColor","fill","options","responsive","maintainAspectRatio","plugins","tooltip","mode","intersect","style","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tianhonggao/Desktop/sample-react/webpage/src/Admin/Statistic.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, PointElement, LineController } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, PointElement, LineController);\n\nconst Stat = () => {\n  const [allProducts, setAllProducts] = useState([]);\n\n  useEffect(() => {\n    fetchDB();\n  }, []);\n\n  const fetchDB = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/products', {\n        method: 'GET',\n      });\n      const data = await response.json();\n      setAllProducts(data);\n    } catch (err) {\n      console.error('Failed to fetch products:', err);\n    }\n  };\n\n  const [lineChartData, setLineChartData] = useState({ labels: [], datasets: [] });\n\n  useEffect(() => {\n    const maxPurchaseCount = 50; // Maximum number of purchases to display\n\n    const sortedProd = [...allProducts].sort((a, b) => b.sold - a.sold);\n\n    // Filter products with recent purchases\n    const filteredProd = sortedProd.filter(item => item.purchases.length > 0);\n\n    // Determine the maximum number of purchases\n    let maxPurchases = 0;\n    filteredProd.forEach(item => {\n      if (item.purchases.length > maxPurchases) {\n        maxPurchases = item.purchases.length;\n      }\n    });\n\n    const labels = [];\n    const datasets = [];\n\n    // Prepare labels and datasets for line chart\n    filteredProd.forEach(item => {\n      const { prod_name, purchases } = item;\n\n      const recentPurchases = purchases.slice(-maxPurchaseCount); // Retrieve the recent purchases\n\n      const purchaseCounts = recentPurchases.map(purchase => purchase.quantity);\n      const purchaseLabel = purchaseCounts.length < maxPurchases ? `Max ${purchaseCounts.length}` : '';\n\n      labels.push(prod_name);\n      datasets.push({\n        label: purchaseLabel,\n        data: purchaseCounts,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        fill: false,\n      });\n    });\n\n    setLineChartData({\n      labels: labels,\n      datasets: datasets,\n    });\n  }, [allProducts]);\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n      },\n    },\n  };\n\n  return (\n    <div style={{ width: \"600px\", height: \"600px\" }}>\n      <Line data={lineChartData} options={options} />\n    </div>\n  );\n};\n\nexport default Stat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}